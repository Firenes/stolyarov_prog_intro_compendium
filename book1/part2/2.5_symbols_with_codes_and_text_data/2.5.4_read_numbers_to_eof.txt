Чтение чисел до конца файла

Работа с числами отличается от работы со строками.
При чтении символов посимвольно в Паскале стоит использовать SeekEof вместо eof.

См. файл simple_sum.pas

Т.к. метод read() – пропускает пробельные символы, читает из потока ввода
символы по одному, пока не найдёт первую цифру числа.
Найдя цифру, read() начинает читать цифры, в соответствующим представлении
числа, пока не дойдёт до пробельного символа.
В процессе чтения, накапливает значение числа путём последовательного
умножения на 10 и прибавления значения очередной цифры.

Ситуация "конец файла" не обязательно может возникнуть сразу после
прочтения последнего числа, т.к. после чисел в потоке могут быть другие
символы. В этом случае eof считает, что можно читать дальше и отдаёт false.
После этого вызывается ещё один read и упирается в "конец файла".
При этом в такой ситуации он делает вид, что просто прочитал 0.

Из-за этого получается так, что количество введённых чисел отличается от
ожидаемого. Пользователь может ввести два числа,
а программа посчитает как 3 (2 числа + 0).
Но сумма не поменяется, т.к. суммируются 2 числа + 0, но с произведением,
так не прокатит.

Если ввод происходит с помощью клавиатуры, то ситуацию конца файла
приходится имитировать с помощью Ctrl-D.
Но в данном случае read() прочитает "конец файла" как символ и
eof не завершит свой цикл. Поэтому необходимо ещё раз нажать Ctrl-D,
чтобы условие not eof отработало. Из-за этого надо нажать Ctrl-D дважды.

Для корректно работы надо использовать SeekEof, который сначала прочитывает
и отбрасывает все пробельные символы. И если упрётся в "конец файла", то
возвращает true, а если нашла непробельный символ, то – false.
При этом непробельный символ "возвращается" в поток ввода, так что
последующий read() начинает работу именного с него.
