Типизированные файлы

Типизированный файл – файл, содержащий последовательность записей
одинакового размера, соответствующих машинному представлению значений
какого-то типа.

Файл numbers.bin из 1.4.6 состоит из 100 записей по 4 байта каждая.
Соответствует четырёх байтного целого (longint)

Создание файла см 2.9.3_gennumbin.pas

Отличий программы от 2.9.2_gennumtx.pas всего несколько:
– название программы;
– суффикс файла (вместо .txt – .bin);
– `write()` вместо `writeln()`;
– тип файловой переменной: `file of longint` вместо `text`.

Файл может состоять из записей, имеющих практически любой тип 
(к примеру, `file of char` и др., т.к. состоит из байтов),
кроме файловых типов.
Не рекомендуется использовать указатели.

Для записи можно использовать и собственные типы:

------------------------------------
type
	NamedPoint = record
		lattitude, longitude: real;
		name: string[15];
	end;
------------------------------------

Используется:
------------------------------------
var
	f: file of NamedPoint;
------------------------------------

Для создания такого файла: `rewrite()`.
Для открытия существующего файла: `reset()`.

Записи типизированных файлов имеют фиксированный размер, в отличии от
текстовых.
Поэтому возможно чередовать операции чтения и записи в любые места файла.

`seek(file, int64)` – процедура, позволяющая менять текущую позицию.
Принимает файловую переменную и номер записи (первая запись – 0).

------------------------------------
seek(f, 15);
write(f, rec);
------------------------------------

В примере выше позиция в файле ставится на 15 номер и затем вставляется
некая запись `rec`.

Для перезаписи `record` записи NamedPoint в 705 позиции можно сделатьтак:

------------------------------------
seek(f, 705);
read(f, np);
np.name := 'Check12';
seek(f, 705);
write(f, np);
------------------------------------

Ставится позиция 705 ->
читается запись в позиции 75 ->
в рамках локальной переменной меняем значение поля `name` -> 
снова ставится выставляем позицию 705, т.к. после чтения позиция смещается
на следующую, т.е. 706 ->
записываем изменённую запись.

Не все файлы, которые можно открыть, могут менять позицию. Те потоки
ввода-вывода, которые подразумевают изменение текущией позиции называются
ПОЗИЦИОНИРУЕМЫМИ.
К ним относятся дисковые файлы, а потоки, связанные с терминалом к ним
не относятся.


Процедуры, открывающие типизированный файл, открывают его в режиме
"чтение и запись".
Это касается и `reset()` и `rewrite()`.
`rewrite()` – создаёт новый файл, если не было или перезаписывает, если есть
`reset()` – не делает ни того, ни другого, но если файла нет – кидает ошибку

Если программа не имеет прав на чтение файла, то `reset()` и `rewrite()`
выдадут ошибку.
В этом случае поможет глобальная переменная `filemode`.
Она имеет несколько значений для работы с типизированными файлами:
2 – чтение и запись (по умолчанию);
0 – только чтение (для открытия – `reset()`);
1 – только запись (для открытия – `rewrite()`).
