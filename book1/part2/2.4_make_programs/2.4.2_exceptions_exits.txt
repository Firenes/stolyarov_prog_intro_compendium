Исключения. Операторы выхода

В Free Pascal для выхода из подпрограммы используется оператор exit.
Оно позволяет завершить подпрограмму при достижении определённого условия.

--------------------------------------
procedure quadratic(a, b, c: real;
					var ok: boolean; var x1, x2: real);
var
	d: real;

begin
	ok := false;

	if a = 0 then
		exit;

	d := b * b - 4 * a * c;
	
	if d < 0 then
		exit;

	d := sqrt(d);
	x1 := (-b - d) / (2 * a);
	x2 := (-b + d) / (2 * a);
	ok := true	
end;
--------------------------------------

Для выхода из самой программы используется олератор halt.
Он также имеет параметры halt(0), halt(1) и т.д.
В параметры передаётся число от 0 до 255, которым можно обозначить ошибку
с которой завершилась программа. Это называется "код завершения процесса".
Код сообщает операционной системе успешно ли программа завершилась.
0 – успешно, остальное – неуспешно.
Для каждого числа больше нуля обычно соответсвует определённый тип ошибки.

Как я понял, exit – аналог return внутри подпрограммы.
halt – return внутри сишного main().

Для циклов и итераций есть операторы break и continue. Которые разберутся позже.
Они пришли из Си.
