program bit_operations; { 2.2.14_bit_operations.pas }

var
	x, y, p, q, r: integer;

begin

	{
		Работа побитовых операций происходит с помощью применения логических
		выражений на числа типа integer и т.д. При работе с ними числа
		переводятся в двоичную систему счисления и проводится операции как
		в булевой алгебре.
		При распечатывании переменной в которой была проведена побитовая
		операция, она будет иметь вид числа в дестичной системе счисления.
	}
	//x := 42;
	//writeln(x);

	//y := not x;
	//writeln(y);

	x := 42;
	y := 166;
	p := x and y;
	q := x or y;
	r := x xor y;

	writeln('x = ', x);
	writeln('y = ', y);
	writeln('p = ', p);
	writeln('q = ', q);
	writeln('r = ', r);

	{
		shl –– Shift Left –– побитовый сдвиг влево
		shr –– Shift Right –– побитовый сдвиг вправо

		Обе операции бинарные и предусматривают два операнда слева и справа.
		Слева –– исходное целое число
		Справа –– количество позиций на которое нужно сдвинуть его побитовое
		машинное представление

		Сдвиг влево –– умножение исходного числа на 2 в степени позиций

		21 shl 3 –– 21 * 2^3 = 168

		При сдвиге вправо младшие разряды пропадают,
		а нулевые биты дописываютсяслева.

		SarShortint, SarSmallint, SarLongint, SarInt64 помогают для работы
		с битовым сдвигом отрицательных чисел
	}
	
end.
