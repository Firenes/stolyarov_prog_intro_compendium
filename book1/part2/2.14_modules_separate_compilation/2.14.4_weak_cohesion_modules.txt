2.14.4 Ослабление сцепленности модулей

Если модуль зависит от другого, то они сцеплены.
Чем слабее сцепленность модулей, то есть их зависимость друг от друга,
тем эти модули полезнее, универсальнее и легче поддаются модификации.

Виды сцепленностей:
- Односторонняя зависимость – один модуль использует другой, но второй
  не зависит от первого;
- Взаимная зависимость – модули используют друг друга;
- Сцепленность по вызовам – модуль вызывает подпрограммы из другого модуля;
- Сцепленность по переменным – модуль обращается к глобальным переменным
  другого модуля;
- Сцепленность по данным – два или более модуля используют одну и ту же
  структуру данных, находящуюся в памяти. Справедливо и для использования
  указателей на структуру данных, принадлежащую модулю.

Односторонняя зависимость > взаимная зависимость.
Сцепленность по вызовам > сцепленность по переменным.

Такие приоритеты использования зависимостей обеспечивают
целостность состояния.

При использовании динамических структур данных,ледует придерживаться
"правилу одного владельца":
у каждой создаваемой динамической структуры данных должен быть "владелец",
в роли которого может выступать подсистема, модуль или даже другая "главная"
структура данных, и такой владелец должен быть один и только один.


Общий подход к сцепленности модулей:
- Избегать возникновения взаимных (двунаправленных) зависимостей между
  модулями, если это не сложно, но не считать их соверешенно недопустимыми;
- Избегать использование глобальных переменнх, покуда это возможно;
  применять их только в случае, если такое применение способно сэкономить
  несколько дней работы;
- Избегать сцепленность по данным, если это невозможно, то неукоснительно
  соблюдать правило одного владельца.
