2.14 Модули и раздельная компиляция

Почти все языки программирования поддерживают включение содержимого одного
файла в другой во время трансляции.
Во Паскале это делается дерективой `{$I имя_файла}`:
```
{$I myfile.pas}
```

Проблемы могут возникать при компиляции, т.к. набор файлов идут одной
отдельной единицей трансляции, где при изменении файлов приходится каждый
раз компилировать всё сразу, даже те файлы, которые не были изменены.

Также возникают проблемы с использованием библиотек, где могут возникнуть
конфликты имён.

Все эти проблемы позволяет решить техника раздельной трансляции.
Программа создаётся в виде множества обособленных частей, каждая из которых
компилируется отдельно.
Такие части называются единицами трансляции, или модулями.

В виде обособленной единицы трансляции оформаляют набор логически связанных
между собой подпрограмм.
В виде модуля также помещают и всё необходимое для их работы – глабальные
переменные, константы и прочее.

Каждый модуль компилируется отдельно. В результате трансляции получается
промежуточный файл, содержащий объектный код.

Объектный код – заготовка для машинного кода: фрагменты программ
представлены ввиде последовательностей кодов команд, но в этих кодах
могут не быть расставлены некоторые адреса, поскольку на момент компиляции
они не были известны; окончательное превращение кода в машинный – задача
редактора связей.

Файлы с объектным кодом объединяются в готовый исполняемый файл с помощью
редактора связей (компоновщика).

Важное свойство модуля – наличие пространства видимости имён.
При создании модуля можно решить какие из вводимых имён будут видны из
других модулей, а какие нет.
Т.е. модуль экспортирует часть вводимх в нём имён.

Трансляция исходного текста модуля в объектный код позволяет исчезнуть всем
идентификаторам, кроме экспортируемых.
