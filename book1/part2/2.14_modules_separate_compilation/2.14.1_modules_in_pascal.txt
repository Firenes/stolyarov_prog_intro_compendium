2.14.1 Модули в Паскале

В Паскале главный файл начинается с ключевого слова `program`.
Неглавные модули – с ключевого слова `unit`:
```
unit myunit;
```

Идентификатор в заголовке программы ни на что не влияет, в отличии от
идентификатора модуля. 
По этому имени модуль идентифицируется в других единицах трансляции,
в том числе в главной програме:
```
program MyProgram1;
uses myunit;
```

Если модулей много, можно перечислить их через запятую:
```
uses crt, mymodule, mydata;
```

Имя модуля должно совпадать с именем файла. Сам файл указывается с
суффиксом `.pp`. Файл модуля `mymodule` проще назваать `mymodule.pp`.

Дальнейший текст модуля должен состоять из 2 частей:
- интерфейс (с ключевым словом interface);
- реализация (с ключевым словом implementation).

В интерфейсе описывается то, что будет видно из других единиц трансляции,
использующих данный модуль – заголовки подпрограмм, константы, типы и
глобальные переменные.

В реализации должны быть все подпрограммы из интерфейса, могут быть любые
объекты, которые не должны светиться снаружи модуля (константы, типы,
переменные, подпрограммы, которых нет в интерфейсе).

Разделение модулей на интерфейсы и реализацию необходимо для ограничений
использования кода, разрешения конфликта имён, возможность менять
реализацию, если кто-то использует интерфейсные методы, чтобы не вызывать
конфликты.
Сокрытие реализации называется инкапсуляцией.

Файл модуля заканчивается ключевым словом `end.`.
Перед ним можно добавить секцию инициализации – слово `begin`, несколько
операторов и далее завершить с `end.`.

Пример модульной реализации см в директорию 2.14.1_unit_demo.

Чтобы скомпилировать всю программу достаточно запустить главный файл:
```
fpc unitdemo.pas
```
Модуль lngtree.pp будет скомпилирован автоматически, если это понадобится.
Результатом будут 2 файла: `lngtree.ppu` и `lngtree.o`.
Модуль будет компилироваться в случае изменения файла.Компилятор будет
смотреть на даты изменения файлов `.pp` и `.pu`и на основе этого решать
о перекомпилировании модуля.
Модуль можно так же скомпилировать самостоятельно:
```
fpc lngtree.pp
```
