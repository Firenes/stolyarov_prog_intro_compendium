Тип string

string – тип, являющийся частным случаем массива из элементов типа char.
При указании типа можно указываться, а можно не указывать размер строки.
Но максимальная длина строки ограничена 255.

---------------------------------
var
	s1: string[15];
	s2: string;
---------------------------------

s1 – max 15 элементов
s2 – max 255 элементов

Больше 255 указывать нельзя – вызовется ошибка.

Тип string предполагает хранение длины строки в отдельном байте.
Байт больше 255 хранить не может.

Переменная типа string занимает на один байт больше, чем предельная длина
хранимой строки.
s1 – 16 байт
s2 – 256 байт

С переменной типа string можно работать как с простым массивом
элементов типа char. При этом индексация начинается с 1.
s1 – s1[1] по s1[15]
s2 – s2[1] по s2[255]

В этих массива есть значение под индексом 0 – длина строки.
Но имеет тип char. Т.е., если длина строки 11, то там будет символ с кодом
#11 или ^K. Поэтому число/код символ можно узнать с помощью функции
ord() – ord(s1[0]).
Но есть общепринятый способ узнать длину с помощью встроенной функции
length().

Строки можно присваивать друг другу, но если присвоить s2 := s1,
то строка в s2 может образаться до 15 символов, т.к. у s1 максимальное
значение для хранения элементов – 15.

При присваивании строк, как и передаче по значениею в подпрограммы, и при
возврате из функциий копируется только значащая часть переменной.
Если в строки только 3 символа, то 3 символа и скопируются + байт длины,
а не все 256 байт.

Если подпрограмма принимает var-параметр типа string, то подать в качестве
этого параметра может любую переменную типа string, в том числе и строку
с ограниченной длиной. Это исключение из общего правила.

Переменные типа string можно "складывать" с помощью символа "+".
(см. 2.6.10_abrakadabra_concatenate) 

Строки бывают пустыми, т.е. без символов – ''.

Типы char практически во всех случаях могут быть неявно преобразованы к типу
string.
(см. 2.6.10_a_z.pas)
